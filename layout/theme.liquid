<!DOCTYPE html>
<html lang="{{ shop.locale }}">
  <head>
 {%- render 'ecom_header' -%}
    <script>
      window.dataLayer = window.dataLayer || [];
    </script>

    <!-- Google Tag Manager -->
    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-WNRHH94');</script>
    <!-- End Google Tag Manager -->

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    <meta name="facebook-domain-verification" content="9bp2ib7zeqqduv2mzo7z4dwe68ibgw" />
    <link rel="canonical" href="{{ canonical_url }}">
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

    {% if settings.favicon != blank %}
      <link rel="shortcut icon" href="{{ settings.favicon | image_url }}" type="image/png">
    {% endif %}

    {% capture seo_title %}
      {{ page_title }}
      {% if current_tags %}
        {%- assign meta_tags = current_tags | join: ", " %} &ndash; {{ "general.meta.tags" | t: tags: meta_tags -}}
      {% endif %}
      {% if current_page != 1 %}
        &ndash; {{ "general.meta.page" | t: page: current_page }}
      {% endif %}
      {% unless page_title contains shop.name %}
        &ndash; {{ shop.name }}
      {% endunless %}
    {% endcapture %}

    <title>{{ seo_title }}</title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render "meta-tags" %}

    {% if template.directory == "customers" %}
      <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer="defer"></script>
    {% endif %}

    <script src="{{ 'index.js' | asset_url }}" defer="defer"></script>

    {% render "css-variables" %}
    {% render "theme-strings" %}

    {{ "index.css" | asset_url | stylesheet_tag }}
    
    {% unless settings.type_body_font.system? %}
      <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
    {% endunless %}

    <link href="https://fonts.googleapis.com/css2?family=Anton&display=swap" rel="stylesheet">

    {{ content_for_header }}
  </head>

  <body data-template="{{ template.name }}" class="{{page.handle}}">
    <!-- Google Tag Manager (noscript) -->
    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-WNRHH94"
      height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->

    <a class="skip-to-content-link Button sr-only" href="#MainContent">
      {{ "accessibility.skip_to_content" | t }}
    </a>

    {% liquid
      assign this_is_landing_page = false
      assign landing_page_handles = settings.landing_pages | newline_to_br | strip_newlines | split: '<br />'

      if landing_page_handles contains page.handle
        assign this_is_landing_page = true
      endif
    %}

    {% unless this_is_landing_page
      or template.suffix contains "checkout-process-player"
    %}
        {% section "header-v2" %}
      <!-- {% section "header" %} -->
    {% endunless %}

    <main id="MainContent" role="main">
      {{ content_for_layout }}
    </main>

    {% unless template.directory == "customers"
      or template.name == "password"
      or template.name == "search"
      or template.suffix contains "products-preorder"
      or template.suffix contains "checkout-process"
      or template.suffix contains "faq"
      or this_is_landing_page
      or request.path contains "tools/recurring"
    %}
      {% section "newsletter" %}
    {% endunless %}

    {% unless this_is_landing_page %}
      {% section "footer" %}
    {% endunless %}

    <ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
      <li id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</li>
    </ul>

    {% render "theme-schemas" %}

    <!-- Start of HubSpot Embed Code -->
    <script type="text/javascript" id="hs-script-loader" async defer src="//js.hs-scripts.com/2547723.js"></script>
    <!-- End of HubSpot Embed Code -->
    <script>
      if(window.location.pathname === "/collections/all"){
        window.location.href = "/collections/accessories";
      }
    </script>
        <script>
          var links = document.querySelectorAll('.myLink');
          
          // Loop through each link and add click event listener
          links.forEach(function(link) {
              link.addEventListener('click', function(event) {
                  // Prevent default link behavior
                  event.preventDefault();
                  
                  // Retrieve the URL from the data-url attribute
                  var url = this.getAttribute('data-url');
                  
                  // Navigate to the URL
                  window.location.href = url;
              });
          });
              </script>
              <script>
                var buttons = document.querySelectorAll('.size__grid-container .button');
var originalSelect = document.querySelector('#product-option-9255503823133-gps-player-vest-size[data-option-select]');
var opts = {
  select: "[data-option-select]",
   main: "[data-option-main]",
};
let listeners = []
let state = {
  id: null,
  options: [],
};

const selects = document.querySelectorAll(opts.select);
  const main = document.querySelector(opts.main)
selects.forEach((select) => {
  if (select.nodeName !== "SELECT")
    throw new Error(
      "data-option-select should be defined on the individual option selectors"
    )

  const index = parseInt(select.getAttribute("data-index"), 10)

  // set initial value
  state.options[index] = select.value

  select.addEventListener("change", (e) => {
    state.options[index] = e.target.value
    updateSelection()
  })
})
  const variants = [].slice.call(main.children).reduce((options, child) => {
    options[child.innerHTML] = child.value
    return options
  }, {})
function updateSelection() {
  state.id = variants[state.options.join(" / ")]
    	console.log(state.id)
  main.value = state.id
    	localStorage.setItem("productVariant",state.id)
  listeners.forEach((fn) => fn(state))
}

buttons.forEach(function(item) {
  item.addEventListener('click', function() {
    // Get the variant id from the button's data attribute
    var variantId = this.getAttribute('data-variant-id');
    // Find the corresponding radio button
    var radio = document.getElementById('a' + variantId);

    if (radio) {
      // Check the radio button
      radio.checked = true;
      // Update the select value to match the radio button's value
      originalSelect.value = radio.getAttribute('data-variant-label');
      updateSelection();
    }
  });
});
              </script>
    <script>
      if(window.location.pathname === "/collections/all"){
        window.location.href = "/collections/accessories";
      }
      if(!window.location.pathname.includes('/checkouts/') && !window.location.pathname.includes('/products/new-gps-player-bundle') && !window.location.pathname.includes('/pages/checkout-process')){
        if(localStorage.getItem('sellingId') != null){
          localStorage.removeItem('sellingId');
        }
        if(localStorage.getItem('productVariant') != null){
          localStorage.removeItem('productVariant');
        }
      }
      if(window.location.pathname === '/products') {
        window.location.href = '/collections/all-pitcherogps-products';
      }
       if(window.location.href === 'https://www.pitcherogps.com/products') {
        window.location.href = 'https://www.pitcherogps.com/collections/all-pitcherogps-products';
      }
    </script>
  {%- render "ecom_footer"-%}<script>var check_edd_data_from_liquid = '1';</script>{% render 'edd_read_data_from_liquid' %}</body>
</html>
